trigger:
  branches:
    include:
      - main

pool:
  name: myjuly-agent-pool

variables:
  RESOURCE_GROUP: 'myjulyproject-rg'
  APP_SERVICE_PLAN: 'myjulyproject-plan'
  APP_NAME: 'myjulyproject-app'
  MYSQL_SERVER_NAME: 'myjuly-mysqlserv08'
  MYSQL_ADMIN: 'dbadmin'
  MYSQL_DB: 'myjulydb'
  MYSQL_PASSWORD: 'P@ssw0rd'
  LOCATION: 'canadacentral'

stages:
- stage: Build
  displayName: Build Stage
  jobs:
    - job: BuildJob
      displayName: Build Spring Boot App
      steps:
        - checkout: self
        - task: Maven@4
          inputs:
            mavenPomFile: 'springbootdemo/pom.xml'
            goals: 'clean package'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            
        - task: PublishBuildArtifacts@1
          displayName: 'Publish JAR Artifact'
          inputs:
            pathToPublish: '$(System.DefaultWorkingDirectory)\springbootdemo\target\springbootdemo.jar'
            artifactName: 'drop'
            
        - script: |
            echo "Current Working Directory: $(System.DefaultWorkingDirectory)"
            cd springbootdemo\target
            dir
        
          displayName: 'List files in target directory'
          workingDirectory: $(System.DefaultWorkingDirectory)
- stage: Deploy
  displayName: Deploy to Azure
  dependsOn: Build
  jobs:
    - job: DeployJob
      displayName: Provision & Deploy
      steps:
        - task: AzureCLI@2
          displayName: 'Provision Azure Resources'
          inputs:
            azureSubscription: 'myfirstconn'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az webapp create `
                --resource-group $env:RESOURCE_GROUP `
                --plan $env:APP_SERVICE_PLAN `
                --name $env:APP_NAME `
                --runtime "JAVA:17-java17"
              Write-Output "‚úÖ WebApp creation completed"

              az mysql flexible-server create `
                --resource-group $env:RESOURCE_GROUP `
                --name $env:MYSQL_SERVER_NAME `
                --admin-user $env:MYSQL_ADMIN `
                --admin-password $env:MYSQL_PASSWORD `
                --sku-name Standard_B1ms `
                --location $env:LOCATION `
                --storage-size 32 `
                --version 8.4 `
                --public-access 0.0.0.0
              Write-Output "‚úÖ MySQL server creation initiated"

              $retryCount = 0
              $maxRetries = 10

              while ($retryCount -lt $maxRetries) {
                $status = az mysql flexible-server show `
                  --resource-group $env:RESOURCE_GROUP `
                  --name $env:MYSQL_SERVER_NAME `
                  --query "state" -o tsv

                if ($status -eq "Ready") {
                  Write-Output "‚úÖ MySQL server is ready."
                  break
                }

                Write-Output "‚è≥ Waiting for MySQL server to be ready... (current state: $status)"
                Start-Sleep -Seconds 15
                $retryCount++
              }

              if ($status -ne "Ready") {
                Write-Output "‚ùå MySQL server did not become ready within expected time."
                exit 1
              }
              az mysql flexible-server parameter set `
                --resource-group $env:RESOURCE_GROUP `
                --server-name $env:MYSQL_SERVER_NAME `
                --name require_secure_transport `
                --value OFF
              Write-Output "----------------SSL enforcement disabled"
              az mysql flexible-server db create `
                --resource-group $env:RESOURCE_GROUP `
                --server-name $env:MYSQL_SERVER_NAME `
                --database-name $env:MYSQL_DB
              Write-Output "‚úÖ DB schema creation completed"

              # Construct variables
              $mysqlHost = "$($env:MYSQL_SERVER_NAME).mysql.database.azure.com"
              $mysqlDb = $env:MYSQL_DB
              $mysqlUser = "$($env:MYSQL_ADMIN)@$($env:MYSQL_SERVER_NAME)"
              $mysqlPassword = $env:MYSQL_PASSWORD

              Write-Output "Setting app settings:"
              Write-Output "MYSQL_HOST = $mysqlHost"
              Write-Output "MYSQL_DB = $mysqlDb"
              Write-Output "MYSQL_USER = $mysqlUser"

              az webapp config appsettings set `
                --resource-group $env:RESOURCE_GROUP `
                --name $env:APP_NAME `
                --settings `
                  "MYSQL_HOST=$mysqlHost" `
                  "MYSQL_DB=$mysqlDb" `
                  "MYSQL_USER=$mysqlUser" `
                  "MYSQL_PASSWORD=$mysqlPassword" 

              Write-Output "‚úÖ WebApp mapped to related DB credentials"
              
              az webapp config appsettings list `
                --name "myjulyproject-app" `
                --resource-group "myjulyproject-rg" `
                --output table
                
              $webappUrl = az webapp show `
                --name $env:APP_NAME `
                --resource-group $env:RESOURCE_GROUP `
                --query defaultHostName -o tsv

              Write-Output "üåê WebApp URL: https://$webappUrl"
              Write-Output "-----------------END OF TASK -----Next is Deployment------------"
              
        - task: DownloadBuildArtifacts@0
          displayName: 'Download Build Artifacts'
          inputs:
            artifactName: 'drop'
        
        - task: AzureWebApp@1
          displayName: 'Deploy Deeps Spring Boot App'
          inputs:
            azureSubscription: 'myfirstconn'
            appType: 'webAppLinux'
            appName: '$(APP_NAME)'
            package: '$(Pipeline.Workspace)\drop\springbootdemo.jar'
            
            
        - powershell: |
             Write-Output "System.DefaultWorkingDirectory: $(System.DefaultWorkingDirectory)"
             Get-ChildItem -Path "$(System.DefaultWorkingDirectory)" -Recurse
          displayName: 'Print System.DefaultWorkingDirectory and list files'            
         